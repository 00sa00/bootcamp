{"data":{"markdownRemark":{"html":"<p>We're going to build a dog picture viewer using the <a href=\"https://dog.ceo/dog-api/documentation/\">dog.ceo API</a>. This project is going to allow users to select a breed from a drop down list and then display a random picture of that breed.</p>\n<p><a href=\"../dog-viewer/dog.html\">Here's my version of it.</a></p>\n<p>Requirements:</p>\n<ul>\n<li>Here are the API docs.</li>\n<li>The list of breeds can be obtained by <code class=\"language-text\">List all breeds</code> API (see the docs linked above.) Request the list of breeds and then use those to create all the <code class=\"language-text\">option</code>s for the <code class=\"language-text\">select</code>.</li>\n<li>When the page first loads, show a loading spinner until the image has loaded. I used an emoji with CSS animations to do so. Feel free to <a href=\"https://codepen.io/tag/spinner/#\">look at what other people have done</a>, write your own (short tutorial will be below), or use an animated GIF. When the image loads, hide the spinner and show the image.</li>\n<li>You already know how to change the <code class=\"language-text\">src</code> of an <code class=\"language-text\">img</code>, but if you immediately hide the loading spinner and show the <code class=\"language-text\">img</code>, you'll have a flash of time where nothing on the page since the image hasn't loaded yet. You can side step this by using <code class=\"language-text\">addEventListener</code> on the <code class=\"language-text\">img</code> tag and listen for the <code class=\"language-text\">&quot;load&quot;</code> event. Once the <code class=\"language-text\">&quot;load&quot;</code> event happens, it means the image is loaded and ready to be shown.</li>\n<li>You can do AJAX request using fetch and promises like I showed you in the previous chapter. I'm now going to show you a brand new feature called async / await and it makes this a lot easier.</li>\n</ul>\n<p>Let's chat about CSS animations a second here:</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style language-css\">\n  <span class=\"token atrule\"><span class=\"token rule\">@keyframes</span> spin</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token selector\">to</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rotateZ</span><span class=\"token punctuation\">(</span>360deg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token atrule\"><span class=\"token rule\">@keyframes</span> psychadelic</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token selector\">100%</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">filter</span><span class=\"token punctuation\">:</span> <span class=\"token function\">hue-rotate</span><span class=\"token punctuation\">(</span>360deg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token selector\">.mole</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 334px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 334px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> brown<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 50%<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token selector\">.color</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">animation</span><span class=\"token punctuation\">:</span> psychadelic 3s linear infinite<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token selector\">.spin</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">animation</span><span class=\"token punctuation\">:</span> spin 3s ease-in-out infinite<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>../mole-game/king-mole-hungry.png<span class=\"token punctuation\">\"</span></span><span class=\"token style-attr language-css\"><span class=\"token attr-name\"> <span class=\"token attr-name\">style</span></span><span class=\"token punctuation\">=\"</span><span class=\"token attr-value\"><span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> brown<span class=\"token punctuation\">;</span> <span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 50%</span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>mole color<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>../mole-game/mole-hungry.png<span class=\"token punctuation\">\"</span></span><span class=\"token style-attr language-css\"><span class=\"token attr-name\"> <span class=\"token attr-name\">style</span></span><span class=\"token punctuation\">=\"</span><span class=\"token attr-value\"><span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> brown<span class=\"token punctuation\">;</span> <span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 50%</span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>mole spin<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></code></pre></div>\n<ul>\n<li>These <code class=\"language-text\">@keyframes</code> animations are re-usable animations that we define once and can use as many times as we want.</li>\n<li>The second word (in our case <code class=\"language-text\">spin</code> and <code class=\"language-text\">psychadelic</code>) are what we called the animations, similar to a variable name. It's what we can refer to it as later.</li>\n<li>Inside the <code class=\"language-text\">@keyframes</code> we have a <code class=\"language-text\">to</code> property. You can define very fine grain steps in the animation but here we want it to infer the steps. We <em>could</em> add <code class=\"language-text\">from { transform: rotateZ(0deg); }</code> but the browser already knows that it's at <code class=\"language-text\">0deg</code> rotation. In this case, it just infers that you want it to start from where it is and animate to the <code class=\"language-text\">to</code> point.</li>\n<li>You can also use percentages. Instead of <code class=\"language-text\">to</code> you'd use <code class=\"language-text\">100%</code> and instead of <code class=\"language-text\">from</code> you'd use <code class=\"language-text\">0%</code>. You can put as many steps as you want in there too e.g. <code class=\"language-text\">1%</code>, <code class=\"language-text\">10%</code>, <code class=\"language-text\">50%</code>, <code class=\"language-text\">92%</code>, etc.</li>\n<li>Where you want to <em>use</em> animation, put something like <code class=\"language-text\">animation: spin 1s infinite linear;</code>. This will use the <code class=\"language-text\">spin</code> animation we defined above, will take 1 second to do one iteration of the animation, will do it with linear easing, and will continue to do it infitiely. The order is not important here.</li>\n<li>Easing allows you to make it seem elastic when it starts and stops, like a ball bouncing. It's faster at the bottom of the bounce and slower at the top.</li>\n</ul>\n<p>Let's talk about async / await for a second. So far we've been using promises and <code class=\"language-text\">.then</code>. There's an easier way to do it and it's called async / await.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>get-doggo<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Get Doggo<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span><span class=\"token style-attr language-css\"><span class=\"token attr-name\"> <span class=\"token attr-name\">style</span></span><span class=\"token punctuation\">=\"</span><span class=\"token attr-value\"><span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 250px<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>doggo<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>http://placecorgi.com/250<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script language-javascript\">\n  <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getDoggo</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> res <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://dog.ceo/api/breeds/image/random\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> resJson <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"doggo\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> resJson<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'get-doggo'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> getDoggo<span class=\"token punctuation\">)</span>\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>Notice the function getDoggo has the <code class=\"language-text\">async</code> keyword there. This means inside of this function we can use <code class=\"language-text\">await</code>. <code class=\"language-text\">await</code> takes a promise and then <em>pauses</em> the function until that promise resolves and gives you the answer back. It makes the code a lot simpler to understand. If you need to deal with errors, you can just try / catch. Feel free to write code this way for this exercise or continue using promises. Do note that I can't say <code class=\"language-text\">await</code> in the top level; it has to be inside of an async function.</p>\n<p>Your page does not have to look like mine. Feel free to design it however you want. Feel free to copy me too!</p>\n<p>Good luck!</p>\n<p>If you want to see my answers, <a href=\"https://github.com/btholt/bootcamp/blob/master/static/dog-viewer/dog.js\">here is the JavaScript</a>, <a href=\"https://github.com/btholt/bootcamp/blob/master/static/dog-viewer/dog.css\">here is the CSS</a>, and <a href=\"https://github.com/btholt/bootcamp/blob/master/static/dog-viewer/dog.html\">here is the HTML</a>.</p>","frontmatter":{"path":"/dogs","title":"Exercise: Dog App","order":14}},"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"order":0,"path":"/intro","title":"Introduction to the Course"}}},{"node":{"frontmatter":{"order":1,"path":"/setup","title":"Setup & Prerequisites"}}},{"node":{"frontmatter":{"order":2,"path":"/html","title":"HTML"}}},{"node":{"frontmatter":{"order":3,"path":"/css","title":"CSS"}}},{"node":{"frontmatter":{"order":4,"path":"/layout","title":"Layout"}}},{"node":{"frontmatter":{"order":5,"path":"/programming-fundamentals","title":"Programming Fundamentals"}}},{"node":{"frontmatter":{"order":6,"path":"/functions-and-scope","title":"Functions and Scope"}}},{"node":{"frontmatter":{"order":7,"path":"/quiz","title":"Exercise: Quiz"}}},{"node":{"frontmatter":{"order":8,"path":"/objects-and-arrays","title":"Objects and Arrays"}}},{"node":{"frontmatter":{"order":9,"path":"/tests","title":"Exercise: Make the Tests Pass"}}},{"node":{"frontmatter":{"order":10,"path":"/dom","title":"The DOM"}}},{"node":{"frontmatter":{"order":11,"path":"/calculator","title":"Building an HTML, CSS, and JavaScript Calculator"}}},{"node":{"frontmatter":{"order":12,"path":"/mole","title":"Exercise: Feed-A-Star-Mole"}}},{"node":{"frontmatter":{"order":13,"path":"/ajax","title":"AJAX"}}},{"node":{"frontmatter":{"order":14,"path":"/dogs","title":"Exercise: Dog App"}}}]}},"pageContext":{}}