{"data":{"markdownRemark":{"html":"<p>Here's your next project, a fun variant on the game Whack-A-Mole. If you're not familiar with the premise, the idea is that little moles will pop out of holes and the game is to tap them before they go back in their holes. In our variant, they're hungry little star moles and we're going to feed them worms! After a user gets 10 points, they win the game! There are also more-rare royal star moles that are worth double. If a user doesn't click on a mole in time, the mole frowns and heads back in its hole. If you manage to feed it in time, it smiles happily and disappers back into its hole.</p>\n<p>We even have beautiful artwork for you to use, drawn by the talented <a href=\"https://www.pickledalice.com/\">Alice Brereton</a>.</p>\n<p><a href=\"./mole-game/mole.html\">Here's my version of the game.</a></p>\n<p>This is a hard project but you can do it! I'd recommend taking it in steps rather than trying to do everything at once. Some sort of progression. I'd recommend something like:</p>\n<ul>\n<li>Get all the CSS and HTML on the page. Have ten holes with a hungry mole in each. No JS done yet.</li>\n<li>Make the moles show up and disappear (don't worry about the sad face / butt yet.) Don't make them clickable yet, just have them disappear and reappear after a random interval.</li>\n<li>Make the hungry moles clickable. If you click on one, add 1 point to your score.</li>\n<li>After 10 clicks, show the win screen.</li>\n<li>Show the worm meter. As a player clicks on moles, show more and more of the worm.</li>\n<li>Make one in ten of the moles that show up a royal mole. If a user clicks a royal mole, add 2 points to their score.</li>\n<li>If a user doesn't click a mole in time, show a sad mole.</li>\n<li>If a user does click a mole in time, show a fed mole.</li>\n<li>After both sad and fed moles, show a mole butt.</li>\n<li>You're done!</li>\n</ul>\n<p>Feel free to play with the timing. In my version I used the following timings:</p>\n<ul>\n<li>Hungry moles show up for two seconds</li>\n<li>Sad, fed, and mole butts show for a half second.</li>\n<li>Moles wait at least two seconds before showing up in the same hole and no more than twenty seconds.</li>\n</ul>\n<p>Some concepts you'll need to know.</p>\n<ul>\n<li><code class=\"language-text\">Date.now()</code> is going to be a useful function for you. It gives you back how many milliseconds have transpired since January 1, 1970 (often to referred as UNIX time or UNIX Epoch time, <a href=\"https://en.wikipedia.org/wiki/Unix_time\">see here if you want to know more</a>).</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>\n<p>You can handle the timing one of two ways: <code class=\"language-text\">setInterval</code> or <code class=\"language-text\">requestAnimationFrame</code></p>\n<ul>\n<li><code class=\"language-text\">setInterval</code> allows you to run a function every X milliseconds. So if I wrote <code class=\"language-text\">setInterval(function() { console.log(&#39;hi&#39;) }, 1000);</code> would log <code class=\"language-text\">hi</code> every second.</li>\n<li><code class=\"language-text\">requestAnimationFrame</code> is preferred. It asks the browser once it's finished doing the previous render to call you function. This happens quite frequently (on the order of milliseconds) so be aware of that. The nice thing is that requestAnimationFrame doesn't run while the browser tab isn't in focus.</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>setInterval <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>interval<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>requestAnimationFrame <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>raf<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script language-javascript\">\n  <span class=\"token keyword\">const</span> interval <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"interval\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> raf <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"raf\"</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">let</span> intervalCount <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    interval<span class=\"token punctuation\">.</span>innerText <span class=\"token operator\">=</span> intervalCount<span class=\"token punctuation\">;</span>\n    intervalCount<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">let</span> rafCount <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> runAgainAt <span class=\"token operator\">=</span> Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">rafCounter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> runAgainAt<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      raf<span class=\"token punctuation\">.</span>innerText <span class=\"token operator\">=</span> rafCount<span class=\"token punctuation\">;</span>\n      rafCount<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n      runAgainAt <span class=\"token operator\">=</span> Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">requestAnimationFrame</span><span class=\"token punctuation\">(</span>rafCounter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">requestAnimationFrame</span><span class=\"token punctuation\">(</span>rafCounter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<ul>\n<li>The latter is a bit more complicated with <code class=\"language-text\">requestAnimationFrame</code> but it allows the browser to yield back to you when its idle. The former will run no matter after the allotted amount of milliseconds.</li>\n<li>Notice with <code class=\"language-text\">requestAnimationFrame</code>, I'm checking after <code class=\"language-text\">Date.now() + 1000</code> milliseconds have gone by. This is how you make it run only every second.</li>\n<li>You'll probably want to represent each mole as an object. You'll need to keep track of what state each mole is in (\"fed\", \"hungry\", \"leaving\", \"sad\", \"gone\"), if it's a royal or not, and the time to update its status again.</li>\n<li>Statuses flow predictably. \"gone\" goes to \"hungry\" next, \"hungry\" goes to \"sad\", \"sad\" goes to \"leaving\", and \"leaving\" to \"gone\", always. \"hungry\" can go to \"fed\" if they're clicked in time. They go from \"fed\" to \"leaving\" and then back into the normal cycle.</li>\n<li>You can modify the <code class=\"language-text\">src</code> of an image and it updates the image.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span><span class=\"token style-attr language-css\"><span class=\"token attr-name\"> <span class=\"token attr-name\">style</span></span><span class=\"token punctuation\">=\"</span><span class=\"token attr-value\"><span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> brown</span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>mole<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>../mole-game/mole-hungry.png<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script language-javascript\">\n  <span class=\"token keyword\">const</span> mole <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mole\"</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">let</span> isHungry <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> nextTime <span class=\"token operator\">=</span> Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> nextTime<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isHungry<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        mole<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> <span class=\"token string\">'./mole-game/mole-sad.png'</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        mole<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> <span class=\"token string\">'./mole-game/mole-hungry.png'</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      isHungry <span class=\"token operator\">=</span> <span class=\"token operator\">!</span>isHungry<span class=\"token punctuation\">;</span>\n      nextTime <span class=\"token operator\">=</span> Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">requestAnimationFrame</span><span class=\"token punctuation\">(</span>next<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>You'll need all the static assets (images.) <a href=\"../mole.zip\">Grab them here.</a></p>\n<p>Good luck!</p>\n<p>If you want to see my answers, <a href=\"https://github.com/btholt/bootcamp/blob/master/static/mole-game/mole.js\">here is the JavaScript</a>, <a href=\"https://github.com/btholt/bootcamp/blob/master/static/mole-game/mole.css\">here is the CSS</a>, and <a href=\"https://github.com/btholt/bootcamp/blob/master/static/mole-game/mole.html\">here is the HTML</a>.</p>","frontmatter":{"path":"/mole","title":"Exercise: Feed-A-Star-Mole","order":15}},"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"order":0,"path":"/intro","title":"Introduction to the Course"}}},{"node":{"frontmatter":{"order":1,"path":"/setup","title":"Setup & Prerequisites"}}},{"node":{"frontmatter":{"order":2,"path":"/html","title":"HTML"}}},{"node":{"frontmatter":{"order":3,"path":"/css","title":"CSS"}}},{"node":{"frontmatter":{"order":4,"path":"/layout","title":"Layout"}}},{"node":{"frontmatter":{"order":5,"path":"/forms","title":"Forms"}}},{"node":{"frontmatter":{"order":6,"path":"/github","title":"GitHub"}}},{"node":{"frontmatter":{"order":7,"path":"/calculator-html","title":"Calulator HTML & CSS Exercise"}}},{"node":{"frontmatter":{"order":8,"path":"/programming-fundamentals","title":"Programming Fundamentals"}}},{"node":{"frontmatter":{"order":9,"path":"/functions-and-scope","title":"Functions and Scope"}}},{"node":{"frontmatter":{"order":10,"path":"/quiz","title":"Exercise: Quiz"}}},{"node":{"frontmatter":{"order":11,"path":"/objects-and-arrays","title":"Objects and Arrays"}}},{"node":{"frontmatter":{"order":12,"path":"/tests","title":"Exercise: Make the Tests Pass"}}},{"node":{"frontmatter":{"order":13,"path":"/dom","title":"The DOM"}}},{"node":{"frontmatter":{"order":14,"path":"/calculator","title":"Exercise: Making the Calculator Work with JavaScript"}}},{"node":{"frontmatter":{"order":15,"path":"/mole","title":"Exercise: Feed-A-Star-Mole"}}},{"node":{"frontmatter":{"order":16,"path":"/interactive","title":"Making Your Site Interactive"}}},{"node":{"frontmatter":{"order":17,"path":"/ajax","title":"AJAX"}}},{"node":{"frontmatter":{"order":18,"path":"/dogs","title":"Exercise: Dog App"}}},{"node":{"frontmatter":{"order":19,"path":"/fox","title":"Final Project: Your Own Fox Pet"}}}]}},"pageContext":{}}